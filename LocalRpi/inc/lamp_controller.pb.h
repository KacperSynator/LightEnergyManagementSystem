// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lamp_controller.proto

#ifndef PROTOBUF_INCLUDED_lamp_5fcontroller_2eproto
#define PROTOBUF_INCLUDED_lamp_5fcontroller_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_lamp_5fcontroller_2eproto 

namespace protobuf_lamp_5fcontroller_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_lamp_5fcontroller_2eproto
namespace lamp_controller {
class LampData;
class LampDataDefaultTypeInternal;
extern LampDataDefaultTypeInternal _LampData_default_instance_;
}  // namespace lamp_controller
namespace google {
namespace protobuf {
template<> ::lamp_controller::LampData* Arena::CreateMaybeMessage<::lamp_controller::LampData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace lamp_controller {

// ===================================================================

class LampData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lamp_controller.LampData) */ {
 public:
  LampData();
  virtual ~LampData();

  LampData(const LampData& from);

  inline LampData& operator=(const LampData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LampData(LampData&& from) noexcept
    : LampData() {
    *this = ::std::move(from);
  }

  inline LampData& operator=(LampData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LampData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LampData* internal_default_instance() {
    return reinterpret_cast<const LampData*>(
               &_LampData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LampData* other);
  friend void swap(LampData& a, LampData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LampData* New() const final {
    return CreateMaybeMessage<LampData>(NULL);
  }

  LampData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LampData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LampData& from);
  void MergeFrom(const LampData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LampData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // float illuminance = 2;
  void clear_illuminance();
  static const int kIlluminanceFieldNumber = 2;
  float illuminance() const;
  void set_illuminance(float value);

  // float voltage = 3;
  void clear_voltage();
  static const int kVoltageFieldNumber = 3;
  float voltage() const;
  void set_voltage(float value);

  // float current = 4;
  void clear_current();
  static const int kCurrentFieldNumber = 4;
  float current() const;
  void set_current(float value);

  // float power = 5;
  void clear_power();
  static const int kPowerFieldNumber = 5;
  float power() const;
  void set_power(float value);

  // float energy = 6;
  void clear_energy();
  static const int kEnergyFieldNumber = 6;
  float energy() const;
  void set_energy(float value);

  // float frequency = 7;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 7;
  float frequency() const;
  void set_frequency(float value);

  // float power_factor = 8;
  void clear_power_factor();
  static const int kPowerFactorFieldNumber = 8;
  float power_factor() const;
  void set_power_factor(float value);

  // @@protoc_insertion_point(class_scope:lamp_controller.LampData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float illuminance_;
  float voltage_;
  float current_;
  float power_;
  float energy_;
  float frequency_;
  float power_factor_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_lamp_5fcontroller_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LampData

// string name = 1;
inline void LampData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LampData::name() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.name)
  return name_.GetNoArena();
}
inline void LampData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.name)
}
#if LANG_CXX11
inline void LampData::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lamp_controller.LampData.name)
}
#endif
inline void LampData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lamp_controller.LampData.name)
}
inline void LampData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lamp_controller.LampData.name)
}
inline ::std::string* LampData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:lamp_controller.LampData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LampData::release_name() {
  // @@protoc_insertion_point(field_release:lamp_controller.LampData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LampData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:lamp_controller.LampData.name)
}

// float illuminance = 2;
inline void LampData::clear_illuminance() {
  illuminance_ = 0;
}
inline float LampData::illuminance() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.illuminance)
  return illuminance_;
}
inline void LampData::set_illuminance(float value) {
  
  illuminance_ = value;
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.illuminance)
}

// float voltage = 3;
inline void LampData::clear_voltage() {
  voltage_ = 0;
}
inline float LampData::voltage() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.voltage)
  return voltage_;
}
inline void LampData::set_voltage(float value) {
  
  voltage_ = value;
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.voltage)
}

// float current = 4;
inline void LampData::clear_current() {
  current_ = 0;
}
inline float LampData::current() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.current)
  return current_;
}
inline void LampData::set_current(float value) {
  
  current_ = value;
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.current)
}

// float power = 5;
inline void LampData::clear_power() {
  power_ = 0;
}
inline float LampData::power() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.power)
  return power_;
}
inline void LampData::set_power(float value) {
  
  power_ = value;
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.power)
}

// float energy = 6;
inline void LampData::clear_energy() {
  energy_ = 0;
}
inline float LampData::energy() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.energy)
  return energy_;
}
inline void LampData::set_energy(float value) {
  
  energy_ = value;
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.energy)
}

// float frequency = 7;
inline void LampData::clear_frequency() {
  frequency_ = 0;
}
inline float LampData::frequency() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.frequency)
  return frequency_;
}
inline void LampData::set_frequency(float value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.frequency)
}

// float power_factor = 8;
inline void LampData::clear_power_factor() {
  power_factor_ = 0;
}
inline float LampData::power_factor() const {
  // @@protoc_insertion_point(field_get:lamp_controller.LampData.power_factor)
  return power_factor_;
}
inline void LampData::set_power_factor(float value) {
  
  power_factor_ = value;
  // @@protoc_insertion_point(field_set:lamp_controller.LampData.power_factor)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace lamp_controller

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_lamp_5fcontroller_2eproto
