/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_LAMP_CONTROLLER_LAMP_CONTROLLER_PB_H_INCLUDED
#define PB_LAMP_CONTROLLER_LAMP_CONTROLLER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _lamp_controller_LampData { 
    pb_callback_t name; 
    float illuminance; 
} lamp_controller_LampData;

typedef struct _lamp_controller_LampData_ElectricData { 
    float voltage; 
    float current; 
    float power; 
    float energy; 
    float frequency; 
    float power_factor; 
} lamp_controller_LampData_ElectricData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define lamp_controller_LampData_init_default    {{{NULL}, NULL}, 0}
#define lamp_controller_LampData_ElectricData_init_default {0, 0, 0, 0, 0, 0}
#define lamp_controller_LampData_init_zero       {{{NULL}, NULL}, 0}
#define lamp_controller_LampData_ElectricData_init_zero {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define lamp_controller_LampData_name_tag        1
#define lamp_controller_LampData_illuminance_tag 2
#define lamp_controller_LampData_ElectricData_voltage_tag 1
#define lamp_controller_LampData_ElectricData_current_tag 2
#define lamp_controller_LampData_ElectricData_power_tag 3
#define lamp_controller_LampData_ElectricData_energy_tag 4
#define lamp_controller_LampData_ElectricData_frequency_tag 5
#define lamp_controller_LampData_ElectricData_power_factor_tag 6

/* Struct field encoding specification for nanopb */
#define lamp_controller_LampData_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    illuminance,       2)
#define lamp_controller_LampData_CALLBACK pb_default_field_callback
#define lamp_controller_LampData_DEFAULT NULL

#define lamp_controller_LampData_ElectricData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    voltage,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    current,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    power,             3) \
X(a, STATIC,   SINGULAR, FLOAT,    energy,            4) \
X(a, STATIC,   SINGULAR, FLOAT,    frequency,         5) \
X(a, STATIC,   SINGULAR, FLOAT,    power_factor,      6)
#define lamp_controller_LampData_ElectricData_CALLBACK NULL
#define lamp_controller_LampData_ElectricData_DEFAULT NULL

extern const pb_msgdesc_t lamp_controller_LampData_msg;
extern const pb_msgdesc_t lamp_controller_LampData_ElectricData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define lamp_controller_LampData_fields &lamp_controller_LampData_msg
#define lamp_controller_LampData_ElectricData_fields &lamp_controller_LampData_ElectricData_msg

/* Maximum encoded size of messages (where known) */
/* lamp_controller_LampData_size depends on runtime parameters */
#define lamp_controller_LampData_ElectricData_size 30

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
